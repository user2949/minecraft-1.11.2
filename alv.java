import com.google.common.collect.Sets;
import java.util.Set;
import javax.annotation.Nullable;

public class alv {
	private static final Set<alu> dC;
	public static final alu a;
	public static final alu b;
	public static final anx c;
	public static final alu d;
	public static final alu e;
	public static final alu f;
	public static final alu g;
	public static final alu h;
	public static final anb i;
	public static final ara j;
	public static final anb k;
	public static final ara l;
	public static final aqj m;
	public static final alu n;
	public static final alu o;
	public static final alu p;
	public static final alu q;
	public static final alu r;
	public static final alu s;
	public static final aon t;
	public static final aon u;
	public static final alu v;
	public static final alu w;
	public static final alu x;
	public static final alu y;
	public static final alu z;
	public static final alu A;
	public static final alu B;
	public static final alu C;
	public static final alu D;
	public static final alu E;
	public static final atc F;
	public static final alu G;
	public static final ari H;
	public static final amr I;
	public static final atc J;
	public static final atd K;
	public static final alu L;
	public static final ate M;
	public static final ano N;
	public static final ano O;
	public static final ama P;
	public static final ama Q;
	public static final alu R;
	public static final alu S;
	public static final aob T;
	public static final aob U;
	public static final alu V;
	public static final alu W;
	public static final alu X;
	public static final alu Y;
	public static final alu Z;
	public static final alu aa;
	public static final ann ab;
	public static final alu ac;
	public static final alu ad;
	public static final amg ae;
	public static final aqb af;
	public static final alu ag;
	public static final alu ah;
	public static final alu ai;
	public static final alu aj;
	public static final alu ak;
	public static final alu al;
	public static final alu am;
	public static final alu an;
	public static final amx ao;
	public static final amx ap;
	public static final amx aq;
	public static final amx ar;
	public static final amx as;
	public static final amx at;
	public static final alu au;
	public static final alu av;
	public static final alu aw;
	public static final alu ax;
	public static final alu ay;
	public static final alu az;
	public static final amx aA;
	public static final alu aB;
	public static final alu aC;
	public static final alu aD;
	public static final alu aE;
	public static final alu aF;
	public static final alu aG;
	public static final alu aH;
	public static final alu aI;
	public static final alu aJ;
	public static final amc aK;
	public static final alu aL;
	public static final aqe aM;
	public static final alu aN;
	public static final alu aO;
	public static final alu aP;
	public static final alu aQ;
	public static final alu aR;
	public static final alu aS;
	public static final alu aT;
	public static final alu aU;
	public static final alu aV;
	public static final alu aW;
	public static final alu aX;
	public static final apo aY;
	public static final alu aZ;
	public static final alu ba;
	public static final aqg bb;
	public static final aqg bc;
	public static final alu bd;
	public static final alu be;
	public static final alu bf;
	public static final alu bg;
	public static final alu bh;
	public static final alu bi;
	public static final alu bj;
	public static final alu bk;
	public static final alu bl;
	public static final alu bm;
	public static final alu bn;
	public static final alu bo;
	public static final alu bp;
	public static final alu bq;
	public static final alu br;
	public static final alu bs;
	public static final alu bt;
	public static final alu bu;
	public static final alu bv;
	public static final aoy bw;
	public static final alu bx;
	public static final alu by;
	public static final alu bz;
	public static final alu bA;
	public static final alu bB;
	public static final alu bC;
	public static final alu bD;
	public static final amf bE;
	public static final alu bF;
	public static final alu bG;
	public static final alu bH;
	public static final alu bI;
	public static final alu bJ;
	public static final alu bK;
	public static final aob bL;
	public static final aob bM;
	public static final alu bN;
	public static final alu bO;
	public static final alu bP;
	public static final alu bQ;
	public static final aro bR;
	public static final alu bS;
	public static final alu bT;
	public static final alu bU;
	public static final alu bV;
	public static final alu bW;
	public static final alu bX;
	public static final alr bY;
	public static final alu bZ;
	public static final alu ca;
	public static final alu cb;
	public static final alu cc;
	public static final alu cd;
	public static final aqp ce;
	public static final alu cf;
	public static final alu cg;
	public static final alu ch;
	public static final alu ci;
	public static final amn cj;
	public static final amn ck;
	public static final amq cl;
	public static final amq cm;
	public static final alu cn;
	public static final alu co;
	public static final aoh cp;
	public static final alu cq;
	public static final alu cr;
	public static final alu cs;
	public static final alu ct;
	public static final alu cu;
	public static final alu cv;
	public static final alu cw;
	public static final alu cx;
	public static final alu cy;
	public static final alu cz;
	public static final alu cA;
	public static final alu cB;
	public static final alu cC;
	public static final alu cD;
	public static final alu cE;
	public static final amy cF;
	public static final aqw cG;
	public static final aqx cH;
	public static final alu cI;
	public static final alu cJ;
	public static final alu cK;
	public static final alu cL;
	public static final alu cM;
	public static final alu cN;
	public static final aob cO;
	public static final aob cP;
	public static final alu cQ;
	public static final alu cR;
	public static final alu cS;
	public static final alu cT;
	public static final alu cU;
	public static final alu cV;
	public static final aob cW;
	public static final aob cX;
	public static final alu cY;
	public static final alu cZ;
	public static final alu da;
	public static final alu db;
	public static final alu dc;
	public static final alu dd;
	public static final alu de;
	public static final alu df;
	public static final alu dg;
	public static final alu dh;
	public static final alu di;
	public static final alu dj;
	public static final alu dk;
	public static final alu dl;
	public static final alu dm;
	public static final alu dn;
	public static final alu do;
	public static final alu dp;
	public static final alu dq;
	public static final alu dr;
	public static final alu ds;
	public static final alu dt;
	public static final alu du;
	public static final alu dv;
	public static final alu dw;
	public static final alu dx;
	public static final alu dy;
	public static final alu dz;
	public static final alu dA;
	public static final alu dB;

	@Nullable
	private static alu a(String string) {
		alu alu2 = alu.h.c(new kq(string));
		if (!dC.add(alu2)) {
			throw new IllegalStateException("Invalid Block requested: " + string);
		} else {
			return alu2;
		}
	}

	static {
		if (!kt.a()) {
			throw new RuntimeException("Accessed Blocks before Bootstrap!");
		} else {
			dC = Sets.newHashSet();
			a = a("air");
			b = a("stone");
			c = (anx)a("grass");
			d = a("dirt");
			e = a("cobblestone");
			f = a("planks");
			g = a("sapling");
			h = a("bedrock");
			i = (anb)a("flowing_water");
			j = (ara)a("water");
			k = (anb)a("flowing_lava");
			l = (ara)a("lava");
			m = (aqj)a("sand");
			n = a("gravel");
			o = a("gold_ore");
			p = a("iron_ore");
			q = a("coal_ore");
			r = a("log");
			s = a("log2");
			t = (aon)a("leaves");
			u = (aon)a("leaves2");
			v = a("sponge");
			w = a("glass");
			x = a("lapis_ore");
			y = a("lapis_block");
			z = a("dispenser");
			A = a("sandstone");
			B = a("noteblock");
			C = a("bed");
			D = a("golden_rail");
			E = a("detector_rail");
			F = (atc)a("sticky_piston");
			G = a("web");
			H = (ari)a("tallgrass");
			I = (amr)a("deadbush");
			J = (atc)a("piston");
			K = (atd)a("piston_head");
			L = a("wool");
			M = (ate)a("piston_extension");
			N = (ano)a("yellow_flower");
			O = (ano)a("red_flower");
			P = (ama)a("brown_mushroom");
			Q = (ama)a("red_mushroom");
			R = a("gold_block");
			S = a("iron_block");
			T = (aob)a("double_stone_slab");
			U = (aob)a("stone_slab");
			V = a("brick_block");
			W = a("tnt");
			X = a("bookshelf");
			Y = a("mossy_cobblestone");
			Z = a("obsidian");
			aa = a("torch");
			ab = (ann)a("fire");
			ac = a("mob_spawner");
			ad = a("oak_stairs");
			ae = (amg)a("chest");
			af = (aqb)a("redstone_wire");
			ag = a("diamond_ore");
			ah = a("diamond_block");
			ai = a("crafting_table");
			aj = a("wheat");
			ak = a("farmland");
			al = a("furnace");
			am = a("lit_furnace");
			an = a("standing_sign");
			ao = (amx)a("wooden_door");
			ap = (amx)a("spruce_door");
			aq = (amx)a("birch_door");
			ar = (amx)a("jungle_door");
			as = (amx)a("acacia_door");
			at = (amx)a("dark_oak_door");
			au = a("ladder");
			av = a("rail");
			aw = a("stone_stairs");
			ax = a("wall_sign");
			ay = a("lever");
			az = a("stone_pressure_plate");
			aA = (amx)a("iron_door");
			aB = a("wooden_pressure_plate");
			aC = a("redstone_ore");
			aD = a("lit_redstone_ore");
			aE = a("unlit_redstone_torch");
			aF = a("redstone_torch");
			aG = a("stone_button");
			aH = a("snow_layer");
			aI = a("ice");
			aJ = a("snow");
			aK = (amc)a("cactus");
			aL = a("clay");
			aM = (aqe)a("reeds");
			aN = a("jukebox");
			aO = a("fence");
			aP = a("spruce_fence");
			aQ = a("birch_fence");
			aR = a("jungle_fence");
			aS = a("dark_oak_fence");
			aT = a("acacia_fence");
			aU = a("pumpkin");
			aV = a("netherrack");
			aW = a("soul_sand");
			aX = a("glowstone");
			aY = (apo)a("portal");
			aZ = a("lit_pumpkin");
			ba = a("cake");
			bb = (aqg)a("unpowered_repeater");
			bc = (aqg)a("powered_repeater");
			bd = a("trapdoor");
			be = a("monster_egg");
			bf = a("stonebrick");
			bg = a("brown_mushroom_block");
			bh = a("red_mushroom_block");
			bi = a("iron_bars");
			bj = a("glass_pane");
			bk = a("melon_block");
			bl = a("pumpkin_stem");
			bm = a("melon_stem");
			bn = a("vine");
			bo = a("fence_gate");
			bp = a("spruce_fence_gate");
			bq = a("birch_fence_gate");
			br = a("jungle_fence_gate");
			bs = a("dark_oak_fence_gate");
			bt = a("acacia_fence_gate");
			bu = a("brick_stairs");
			bv = a("stone_brick_stairs");
			bw = (aoy)a("mycelium");
			bx = a("waterlily");
			by = a("nether_brick");
			bz = a("nether_brick_fence");
			bA = a("nether_brick_stairs");
			bB = a("nether_wart");
			bC = a("enchanting_table");
			bD = a("brewing_stand");
			bE = (amf)a("cauldron");
			bF = a("end_portal");
			bG = a("end_portal_frame");
			bH = a("end_stone");
			bI = a("dragon_egg");
			bJ = a("redstone_lamp");
			bK = a("lit_redstone_lamp");
			bL = (aob)a("double_wooden_slab");
			bM = (aob)a("wooden_slab");
			bN = a("cocoa");
			bO = a("sandstone_stairs");
			bP = a("emerald_ore");
			bQ = a("ender_chest");
			bR = (aro)a("tripwire_hook");
			bS = a("tripwire");
			bT = a("emerald_block");
			bU = a("spruce_stairs");
			bV = a("birch_stairs");
			bW = a("jungle_stairs");
			bX = a("command_block");
			bY = (alr)a("beacon");
			bZ = a("cobblestone_wall");
			ca = a("flower_pot");
			cb = a("carrots");
			cc = a("potatoes");
			cd = a("wooden_button");
			ce = (aqp)a("skull");
			cf = a("anvil");
			cg = a("trapped_chest");
			ch = a("light_weighted_pressure_plate");
			ci = a("heavy_weighted_pressure_plate");
			cj = (amn)a("unpowered_comparator");
			ck = (amn)a("powered_comparator");
			cl = (amq)a("daylight_detector");
			cm = (amq)a("daylight_detector_inverted");
			cn = a("redstone_block");
			co = a("quartz_ore");
			cp = (aoh)a("hopper");
			cq = a("quartz_block");
			cr = a("quartz_stairs");
			cs = a("activator_rail");
			ct = a("dropper");
			cu = a("stained_hardened_clay");
			cv = a("barrier");
			cw = a("iron_trapdoor");
			cx = a("hay_block");
			cy = a("carpet");
			cz = a("hardened_clay");
			cA = a("coal_block");
			cB = a("packed_ice");
			cC = a("acacia_stairs");
			cD = a("dark_oak_stairs");
			cE = a("slime");
			cF = (amy)a("double_plant");
			cG = (aqw)a("stained_glass");
			cH = (aqx)a("stained_glass_pane");
			cI = a("prismarine");
			cJ = a("sea_lantern");
			cK = a("standing_banner");
			cL = a("wall_banner");
			cM = a("red_sandstone");
			cN = a("red_sandstone_stairs");
			cO = (aob)a("double_stone_slab2");
			cP = (aob)a("stone_slab2");
			cQ = a("end_rod");
			cR = a("chorus_plant");
			cS = a("chorus_flower");
			cT = a("purpur_block");
			cU = a("purpur_pillar");
			cV = a("purpur_stairs");
			cW = (aob)a("purpur_double_slab");
			cX = (aob)a("purpur_slab");
			cY = a("end_bricks");
			cZ = a("beetroots");
			da = a("grass_path");
			db = a("end_gateway");
			dc = a("repeating_command_block");
			dd = a("chain_command_block");
			de = a("frosted_ice");
			df = a("magma");
			dg = a("nether_wart_block");
			dh = a("red_nether_brick");
			di = a("bone_block");
			dj = a("structure_void");
			dk = a("observer");
			dl = a("white_shulker_box");
			dm = a("orange_shulker_box");
			dn = a("magenta_shulker_box");
			do = a("light_blue_shulker_box");
			dp = a("yellow_shulker_box");
			dq = a("lime_shulker_box");
			dr = a("pink_shulker_box");
			ds = a("gray_shulker_box");
			dt = a("silver_shulker_box");
			du = a("cyan_shulker_box");
			dv = a("purple_shulker_box");
			dw = a("blue_shulker_box");
			dx = a("brown_shulker_box");
			dy = a("green_shulker_box");
			dz = a("red_shulker_box");
			dA = a("black_shulker_box");
			dB = a("structure_block");
			dC.clear();
		}
	}
}
